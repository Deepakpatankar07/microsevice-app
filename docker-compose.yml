services:
  api:
    build: ./api-service
    container_name: api-service
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      mongo:
        condition: service_started
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  consumer:
    build: ./consumer-service
    container_name: consumer-service
    restart: always
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy

  seed:
    build: ./api-service
    container_name: seed-service
    env_file:
      - .env
    depends_on:
      mongo:
        condition: service_started
    command: ["node", "seed.js"]



  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"


  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 10s
      retries: 5


volumes:
  mongo_data:
